<?xml version="1.0"?>
<launch>

  <rosparam file="$(find five_axis_robot)/config/gazebo_five_axis_control.yaml" command="load"/>
  <rosparam file="$(find five_axis_robot)/config/gazebo_five_axis_pid.yaml" command="load"/>
  <rosparam file="$(find five_axis_robot)/config/five_axis_joint_limits.yaml" command="load" />

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find five_axis_robot)/worlds/five_axis.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"	command="$(find xacro)/xacro '$(find five_axis_robot)/urdf/five_axis_kinect.gazebo.urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model five_axis -param robot_description"/>


  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/five_axis_robot" args="joint1_position_controller joint2_position_controller joint_state_controller"/>

<!--   <param name="five_axis_description" command="$(find xacro)/xacro '$(find five_axis_robot)/urdf/five_axis.urdf'" />

  <node name="five_axis_robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param five_axis_description -model five_axis_robot -x $(arg x) -y $(arg y) -z $(arg z)" /> -->

</launch>